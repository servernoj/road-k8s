name: Build, Push & Deploy
on:
  workflow_dispatch:
jobs: 
  build-push:
    runs-on: ubuntu-latest 
    env:
      DH_USER: ${{ secrets.DOCKERHUB_USERNAME }}
      REPO: ${{ secrets.DOCKERHUB_REPO }}
      SSH_OPTS: '-t -o StrictHostKeyChecking=no'
      REMOTE: root@${{ secrets.AKAMAI_INSTANCE_IP_ADDRESS_1 }} 
      REMOTE_APP_DIR: '/opt/app'
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build the container
        run: |
          docker build -f Dockerfile \
          -t "$DH_USER/$REPO:latest" \
          -t "$DH_USER/$REPO:${{ github.sha }}" \
          .
      - name: Push the container images 
        run: |
          docker push "$DH_USER/$REPO" --all-tags
      - name: Implement the Private SSH Key 
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa 
          chmod 600 ~/.ssh/id_rsa
      - name: Ensure Docker and Docker Compose is installed on VM 
        run: |
          ssh $SSH_OPTS $REMOTE << EOF
            if ! command -v docker &> /dev/null; then
              curl -fsSL https://get.docker.com -o get-docker.sh 
              sudo sh get-docker.sh
              rm get-docker.sh
              # install Docker Compose
              sudo apt-get update
              sudo apt-get install docker-compose-plugin 
            else
              echo "Docker and docker-compose alsready installed"
            fi
          EOF
      - name: Ensure remote directory exists and has the compose spec file
        run: |
          ssh $SSH_OPTS $REMOTE << EOF
            mkdir -p $REMOTE_APP_DIR
            scp $SSH_OPTS docker-compose.yaml $REMOTE:$REMOTE_APP_DIR/
          EOF
      - name: Pull updated images
        run: |
          ssh $SSH_OPTS $REMOTE << EOF
            cd $REMOTE_APP_DIR
            docker compose pull 
          EOF
      - name: Run Docker Compose 
        run: |
          ssh $SSH_OPTS $REMOTE << EOF 
            cd $REMOTE_APP_DIR
            # run containers
            docker compose up -d
          EOF